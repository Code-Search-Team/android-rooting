
취약점 발생 원인 모음.

1. Nachoroot.sh
/data/sensors/AMI304_Config.init 파일을 백업하고, 해당 위치에 /data/local.prop를 위치시킨 다음에
리부팅 후, ro.kernel.qemu=1를 설정한 다음에 다시 리부팅하면 루트쉘이 획득 되는 공격 코드입니다.

2. CVE-2015-3636_poc.c
ICMP 패킷을 전송할 때, 소켓 제어를 통해서 커널 코드(페이로드)를 주입함으로써 루트를 획득하도록
prot[] (크리덴셜 갱신)을 해서 루트쉘을 획득하게 해주는 기능을 한다.

3. exploid.c
/proc/sys/kernel/hotplug를 접근하고, 메시지를 전송한다. USB 키가 플러그인되면 루트쉘이 획득되게 된다.

4. levitator.c
PowerVR SGX 칩셋의 안드로이드에 취약한 공격 코드로, 커널 심볼을 획득하고, 메모리 릭을 통해 커널 메모리를
덤프한 다음에, 메모리를 바꾸는 클로버링을 통해 커널 메모리에 맵핑 시키고, 권한 상승된 다음에
백업된 메모리를 맵핑함으로써 공격에 성공하는 커널 메모리 릭+클로버링 취약점입니다.

5. RageAgainstTheCage.c
RLIMIT_NPROC(최대 프로세스 생성 수)가 설정되어 있는 /sbin/adb 인 경우에, 프로세스를 많이 생성해서
실패하는 경우 /sbin/adb를 리셋하면 root권한의 adb가 실행되어서 쉘이 뜨는 거나한 문제입니다.

6. zygote.c
/system을 리마운트하고, exe(쉘코드)를 /system/bin/rootshell로 복사해서
chmod로 4755로 퍼미션을 권한 설정하게 되면, zygote가 해당 파일에 권한을 주게 되는 취약성으로
인해 루트쉘이 획득 가능한 부분입니다.

7. towelroot.c
futex (fast userspace mutex)가 이용되는 익스플로잇인데, TCP 소켓을 하나 메시지 전송용으로 대기 시키고
pthread를 많이 익스플로잇 용도로 생성합니다. setup_exploit() 함수가 코드에 필요한 메모리를 변조하구요.
시그날 핸들러를 설정해서 write_kernel() 함수가 시그날을 통해 커널 메모리에 쓰는 시도를 잦게 합니다.
그리고 send_magicmsg() 함수가 매직 메시지를 make_socket() 함수를 두 개 호출해 매직 메시지를 두 개 전송합니다.
write_kernel로 인해 크리덴셜이 갱신되고, 커널  메모리에 접근 가능한거 같네요.

